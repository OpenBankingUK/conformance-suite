{
  "references": {
    "OB3GLOAssertOn200": {
      "expect": {
        "status-code": 200,
        "detail": "Expected status code 200 (OK)."
      }
    },
    "OB3GLOAssertOn201": {
      "expect": {
        "status-code": 201,
        "detail": "Expected status code 201 (Created)"
      }
    },
    "OB3GLOAssertOn204": {
      "expect": {
        "status-code": 204,
        "detail": "Expected status code 204 (No Content)"
      }
    },
    "OB3GLOAssertOn400": {
      "expect": {
        "status-code": 400,
        "detail": "Expected status code 400 (Bad Request). When a TPP tries to request a resource URL with a resource Id that does not exist, the ASPSP must respond with a 400 (Bad Request) rather than a 404 (Not Found)."
      }
    },
    "OB3GLOAssertOn401": {
      "expect": {
        "status-code": 401,
        "detail": "Expected status code 401 (Unauthorized)."
      }
    },
    "OB3GLOAssertOn403": {
      "expect": {
        "status-code": 403,
        "detail": "Expected status code 403 (Forbidden)."
      }
    },
    "OB3GLOAssertOn404": {
      "expect": {
        "status-code": 404,
        "detail": "Expected status code 404 (Not Found). If an ASPSP has not implemented an API endpoint, it must respond with a 404 (Not Found) for requests to that URL."
      }
    },
    "OB3GLOFAPIHeader": {
      "expect": {
        "matches": [{
          "header-present": "x-fapi-interaction-id",
          "detail": "Expected RFC4122 UID used as a correlation id. The ASPSP 'plays back' the value given. If a value is not given the ASPSP MUST play back their own UUID."
        }]
      }
    },
    "OB3GLOAssertContentType": {
      "expect": {
        "matches": [{
          "header-present": "content-type",
          "value": "application/json; charset=utf-8",
          "detail": "Expected the correct content type application/json; charset=utf-8"
        }]
      }
    },
    "OB3GLOAssertFAPIPlayBack": {
      "expect": {
        "status-code": 200,
        "matches": [{
          "header": "x-fapi-interaction-id",
          "value": "$x-fapi-interaction-id",
          "detail": "Expected playback of in the x-fapi-interaction-id given. An RFC4122 UID used as a correlation id. If provided, the ASPSP must play back the value in the x-fapi-interaction-id response header."
        }]
      }
    },
    "OB3GLOAAssertConsentId": {
      "expect": {
        "matches": [{
          "type": "ConsentId",
          "JSON": "Data.ConsentId",
          "detail": "Expected a unique identification as assigned by the ASPSP to uniquely identify the consent resource."
        }]
      }
    },
    "OB3GLOAssertNumberOfPayments": {
      "expect": {
        "matches": [{
          "JSON": "Data.Initiation.NumberOfPayments",
          "detail": "Expected NumberOfPayments to be present."
        }]
      }
    },
    "OB3GLOAssertNoNumberOfPayments": {
      "expect": {
        "matches": [{
          "JSON-NOT-PRESENT": "Data.Initiation.NumberOfPayments",
          "detail": "Expected NumberOfPayments to be not present."
        }]
      }
    },
    "OB3GLOAssertFinalPaymentDateTime": {
      "expect": {
        "matches": [{
          "JSON": "Data.Initiation.FinalPaymentDateTime",
          "detail": "Expected FinalPaymentDateTime to be present."
        }]
      }
    },
    "OB3GLOAssertNoFinalPaymentDateTime": {
      "expect": {
        "matches": [{
          "JSON-NOT-PRESENT": "Data.Initiation.FinalPaymentDateTime",
          "detail": "Expected FinalPaymentDateTime to be not present."
        }]
      }
    },
    "OB3GLOAssertFinalPaymentAmount": {
      "expect": {
        "matches": [{
          "JSON": "Data.Initiation.FirstPaymentAmount",
          "detail": "Expected FinalPaymentAmount to be present."
        }]
      }
    },
    "OB3GLOAssertSignatureInvalidClaimErrorCode": {
      "expect": {
        "matches": [{
          "JSON": "Errors.#[ErrorCode=\"UK.OBIE.Signature.InvalidClaim\"].ErrorCode",
          "Value": "UK.OBIE.Signature.InvalidClaim",
          "detail": "Expected a specific error code for invalid claim in signature error."
        }]
      }
    },
    "OB3GLOAssertSignatureMissingClaimErrorCode": {
      "expect": {
        "matches": [{
          "JSON": "Errors.#[ErrorCode=\"UK.OBIE.Signature.MissingClaim\"].ErrorCode",
          "Value": "UK.OBIE.Signature.MissingClaim",
          "detail": "Expected a specific error code for missing claim in signature error."
        }]
      }
    },
    "OB3GLOAssertSignatureMalformedErrorCode": {
      "expect": {
        "matches": [{
          "JSON": "Errors.#[ErrorCode=\"UK.OBIE.Signature.Malformed\"].ErrorCode",
          "Value": "UK.OBIE.Signature.Malformed",
          "detail": "Expected a specific error code for malformed signature error."
        }]
      }
    },
    "OB3DOPAssertAwaitingAuthorisation": {
      "expect": {
        "matches": [{
          "JSON": "Data.Status",
          "Value": "AwaitingAuthorisation",
          "detail": "Expected AwaitingAuthorisation, consent resource awaiting PSU authorisation."
        }]
      }
    },
    "OB3DOPAssertAuthorised": {
      "expect": {
        "matches": [{
          "JSON": "Data.Status",
          "Value": "Authorised",
          "detail": "Expected that the consent resource has been successfully authorised."
        }]
      }
    },
    "OB3DOPAssertAuthorisedV4": {
      "expect": {
        "matches": [{
          "JSON": "Data.Status",
          "Value": "AUTH",
          "detail": "Expected that the consent resource has been successfully authorised."
        }]
      }
    },
    "OB3DOPFundsAvailable": {
      "expect": {
        "matches": [{
          "JSON": "Data.FundsAvailableResult.FundsAvailable",
          "Value": "true",
          "detail": "Expected FundsAvailable to be set to 'true'"
        }]
      }
    },
    "OB3DOPAssertSignatureMissingOBErrorCode": {
      "expect": {
        "matches": [{
          "JSON": "Errors.#[ErrorCode=\"UK.OBIE.Signature.Missing\"].ErrorCode",
          "Value": "UK.OBIE.Signature.Missing",
          "detail": "Expected a specific error code for missing signature."
        }]
      }
    },
    "OB3IPAssertInternationalPaymentId": {
      "expect": {
        "matches": [{
          "JSON": "Data.InternationalPaymentId",
          "detail": "Expected a unique identification as assigned by the ASPSP to uniquely identify the international payment resource."
        }]
      }
    },
    "OB3IPAssertInternationalScheduledPaymentId": {
      "expect": {
        "matches": [{
          "JSON": "Data.InternationalScheduledPaymentId",
          "detail": "Expected a unique identification as assigned by the ASPSP to uniquely identify the international scheduled payment resource."
        }]
      }
    },
    "OB3IPAssertInternationalStandingOrderPaymentId": {
      "expect": {
        "matches": [{
          "JSON": "Data.InternationalStandingOrderPaymentId",
          "detail": "Expected a unique identification as assigned by the ASPSP to uniquely identify the international payment resource."
        }]
      }
    },
    "OB3IPAssertInternationalStandingOrderId": {
      "expect": {
        "matches": [{
          "JSON": "Data.InternationalStandingOrderId",
          "detail": "Expected a unique identification as assigned by the ASPSP to uniquely identify the international standing order resource."
        }]
      }
    },
    "OB3IPAssertUnexpectedErrorOBErrorCode": {
      "expect": {
        "matches": [{
          "JSON": "Errors.#[ErrorCode=\"UK.OBIE.UnexpectedError\"].ErrorCode",
          "Value": "UK.OBIE.UnexpectedError",
          "detail": "Expected a specific error code for unexpected error."
        }]
      }
    },
    "OB3IPAssertHeaderMissingOBErrorCode": {
      "expect": {
        "matches": [{
          "JSON": "Errors.#[ErrorCode=\"UK.OBIE.Header.Missing\"].ErrorCode",
          "Value": "UK.OBIE.Header.Missing",
          "detail": "Expected a specific error code for missing header."
        }]
      }
    },
    "OB3IPAssertHeaderInvalidOBErrorCode": {
      "expect": {
        "matches": [{
          "JSON": "Errors.#[ErrorCode=\"UK.OBIE.Header.Invalid\"].ErrorCode",
          "Value": "UK.OBIE.Header.Invalid",
          "detail": "Expected a specific error code for invalid header."
        }]
      }
    },
    "OB3IPAssertResourceInvalidConsentStatusOBErrorCode": {
      "expect": {
        "matches": [{
          "JSON": "Errors.#[ErrorCode=\"UK.OBIE.Resource.InvalidConsentStatus\"].ErrorCode",
          "Value": "UK.OBIE.Resource.InvalidConsentStatus",
          "detail": "Expected a specific error code for consent status."
        }]
      }
    },
    "OB3IPAssertResourceFieldInvalidOBErrorCode400": {
      "expect": {
        "status-code": 400,
        "matches": [{
          "JSON": "Errors.#[ErrorCode=\"UK.OBIE.Field.Invalid\"].ErrorCode",
          "Value": "UK.OBIE.Field.Invalid",
          "detail": "Expected a specific error code for an invalid field."
        }]
      }
    },
    "OB3IPAssertResourceNotFoundOBErrorCode400": {
      "expect": {
        "status-code": 400,
        "matches": [{
          "JSON": "Errors.#[ErrorCode=\"UK.OBIE.Resource.NotFound\"].ErrorCode",
          "Value": "UK.OBIE.Resource.NotFound",
          "detail": "Expected a specific error code for resource not found."
        }]
      }
    }
  }
}

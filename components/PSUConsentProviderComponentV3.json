{
  "id": "comacctp02",
  "name": "accounts.PSUConsentProvider",
  "description": "Provides PSU Consent Access Tokens for Accounts API",
  "documentation": "The PSU TokenProvider takes a number input parameters and one output parameter. The input paramters define credential, endpoints and consent permssions, the output parameter names the the key under which the resulting token will be placed in the context ",
  "inputParameters": {
    "client_id": "",
    "x-fapi-financial-id": "",
    "basic_authentication": "",
    "token_endpoint": "",
    "resource_server": "",
    "permission_list": ""
  },
  "outputParameters": {
    "consent_id": ""
  },
  "testcases": [
    {
      "@id": "#compPsuConsent01",
      "name": "ClientCredential Grant",
      "input": {
        "method": "POST",
        "endpoint": "$token_endpoint",
        "headers": {
          "content-type": "application/x-www-form-urlencoded",
          "accept": "application/json"
        },
        "formData": {
          "grant_type": "client_credentials",
          "scope": "accounts"
        }
      },
      "context": {
        "baseurl": ""
      },
      "expect": {
        "status-code": 200,
        "contextPut": {
          "matches": [
            {
              "name": "client_access_token",
              "description": "Access Token",
              "json": "access_token"
            }
          ]
        }
      }
    },
    {
      "@id": "#compPsuConsent02",
      "name": "PostAccount Request",
      "input": {
        "method": "POST",
        "endpoint": "/open-banking/$api-version/aisp/account-access-consents",
        "headers": {
          "content-type": "application/json",
          "accept": "application/json",
          "x-fapi-interaction-id": "c4405450-febe-11e8-80a5-0fcebb157400",
          "x-fapi-financial-id": "$x-fapi-financial-id",
          "authorization": "Bearer $client_access_token"
        },
        "bodyData": "{\"Data\": { \"Permissions\": [ $permission_list ],  \"TransactionFromDateTime\": \"$transactionFromDate\", \"TransactionToDateTime\": \"$transactionToDate\" },  \"Risk\": {} }"
      },
      "context": {
        "baseurl": "$resource_server"
      },
      "expect": {
        "status-code": 201,
        "schema-validation": true,
        "matches": [
          {
            "description": "Check we get Status:AwaitingAuthorisation",
            "json": "Data.Status",
            "value": "AwaitingAuthorisation"
          }
        ],
        "contextPut": {
          "matches": [
            {
              "name": "post-account-consent-id",
              "description": "gets the consentid from PostAccountRequest ",
              "json": "Data.ConsentId"
            }
          ]
        }
      }
    },
    {
      "@id": "#compPsuConsent03",
      "name": "Ozone Headless Consent Flow",
      "input": {
        "method": "GET",
        "endpoint": "?clientid",
        "generation": {
          "strategy": "psuConsenturl"
        },
        "claims": {
          "aud": "$issuer",
          "iss": "$client_id",
          "scope": "openid accounts",
          "redirect_url": "$redirect_url",
          "consentId": "$post-account-consent-id",
          "responseType": "$responseType",
          "state": "$token_name",
          "nonce": "true",
          "exp": "true"
        }
      },
      "context": {
        "baseurl": "$authorisation_endpoint"
      },
      "do_not_call_endpoint": true,
      "expect": {
        "status-code": -1
      }
    }
  ]
}
